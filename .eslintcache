[{"/Users/pro/Documents/www/simplychocolate.com/src/index.js":"1","/Users/pro/Documents/www/simplychocolate.com/src/App.js":"2","/Users/pro/Documents/www/simplychocolate.com/src/components/Desktop.js":"3","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/MixedBox.js":"4","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/ZasadyOchranyOsobnychUdajov.js":"5","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/CheckBuyerInformation.js":"6","/Users/pro/Documents/www/simplychocolate.com/src/components/Mobile.js":"7","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/ShippingAndPaymentMethod.js":"8","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/FinalCheck.js":"9","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/BuyerInformation.js":"10","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/ObchodnePodmienky.js":"11","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/IntroDesktop.js":"12","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/ContactDesktop.js":"13","/Users/pro/Documents/www/simplychocolate.com/src/config/endpoints.js":"14","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/AboutDesktop.js":"15","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/Products.js":"16","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/Contact.js":"17","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/Intro.js":"18","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/About.js":"19","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/ProductsDesktop.js":"20","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/Menu.js":"21","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/AboutPageDesktop.js":"22","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/ProductDesktop.js":"23","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/Product.js":"24","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/AboutPage.js":"25"},{"size":289,"mtime":1613762782370,"results":"26","hashOfConfig":"27"},{"size":2261,"mtime":1613950896623,"results":"28","hashOfConfig":"27"},{"size":687,"mtime":1613762782359,"results":"29","hashOfConfig":"27"},{"size":13142,"mtime":1613762782360,"results":"30","hashOfConfig":"27"},{"size":347,"mtime":1613762782360,"results":"31","hashOfConfig":"27"},{"size":7086,"mtime":1613762782360,"results":"32","hashOfConfig":"27"},{"size":546,"mtime":1613762782359,"results":"33","hashOfConfig":"27"},{"size":10265,"mtime":1613762782360,"results":"34","hashOfConfig":"27"},{"size":3651,"mtime":1613762782360,"results":"35","hashOfConfig":"27"},{"size":2348,"mtime":1613762782359,"results":"36","hashOfConfig":"27"},{"size":325,"mtime":1613762782360,"results":"37","hashOfConfig":"27"},{"size":6704,"mtime":1613762782359,"results":"38","hashOfConfig":"27"},{"size":3702,"mtime":1613923206555,"results":"39","hashOfConfig":"27"},{"size":336,"mtime":1613762782360,"results":"40","hashOfConfig":"27"},{"size":2374,"mtime":1613938688238,"results":"41","hashOfConfig":"27"},{"size":2891,"mtime":1613762782359,"results":"42","hashOfConfig":"27"},{"size":3094,"mtime":1613922643780,"results":"43","hashOfConfig":"27"},{"size":7135,"mtime":1613950027125,"results":"44","hashOfConfig":"27"},{"size":2351,"mtime":1613917411999,"results":"45","hashOfConfig":"27"},{"size":3661,"mtime":1613762782359,"results":"46","hashOfConfig":"27"},{"size":1611,"mtime":1613762782360,"results":"47","hashOfConfig":"27"},{"size":593,"mtime":1613762782359,"results":"48","hashOfConfig":"27"},{"size":7052,"mtime":1613914683942,"results":"49","hashOfConfig":"27"},{"size":5335,"mtime":1613948277139,"results":"50","hashOfConfig":"27"},{"size":568,"mtime":1613948219556,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"47j4zc",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pro/Documents/www/simplychocolate.com/src/index.js",[],"/Users/pro/Documents/www/simplychocolate.com/src/App.js",[],"/Users/pro/Documents/www/simplychocolate.com/src/components/Desktop.js",[],["116","117"],"/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/MixedBox.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst BuyerInformationForm = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [boxSize, setBoxSize] = React.useState('unselected');\r\n    const [boxContent, setBoxContent] = React.useState({\r\n        grainyBilly: 0,\r\n        creamyCarol: 0,\r\n        crispyCarrie: 0,\r\n        grainySue: 0,\r\n        fitFiona: 0,\r\n        richArnold: 0,\r\n        speedyTom: 0\r\n    });\r\n    const [currentBoxQuantity, setCurrentBoxQuantity] = React.useState(0);\r\n    const [totalBoxQuantity, setTotalBoxQuantity] = React.useState(0);\r\n    const [boxInfoDisplay, setBoxInfoDisplay] = React.useState('none');\r\n    const [boxInfoNumberColor, setBoxInfoNumberColor] = React.useState('#000');\r\n    const [price, setPrice] = React.useState('0');\r\n    const [reminderDisplay, setReminderDisplay] = React.useState('none');\r\n\r\n    const toggleBoxSize = (event) => {\r\n        let listItems = event.target.parentNode.parentNode.children;\r\n        for (const listItem of listItems) {\r\n            let thisButton = listItem.children.item(0);\r\n\r\n            if (thisButton.classList.contains('active')) {\r\n                thisButton.classList.remove('active');\r\n            }\r\n        }\r\n\r\n        event.target.classList.add('active');\r\n        setBoxSize(event.target.textContent);\r\n        \r\n        changeTotalBoxQuantity(event.target.textContent);\r\n        changeBoxInfoDisplay();\r\n        setBoxInfoColor(currentBoxQuantity);\r\n        changePriceAccToBox(event.target.textContent);\r\n    }\r\n\r\n    const changeTotalBoxQuantity = (size) => {\r\n        switch (size) {\r\n            case 'S':\r\n                setTotalBoxQuantity(6);\r\n                break;\r\n            case 'M':\r\n                setTotalBoxQuantity(12);\r\n                break;\r\n            case 'L':\r\n                setTotalBoxQuantity(24);\r\n                break;\r\n            case 'XL':\r\n                setTotalBoxQuantity(30);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const changeBoxInfoDisplay = () => {\r\n        if (boxSize !== \"unselected\") {\r\n            setBoxInfoDisplay('block');\r\n        }\r\n    }\r\n\r\n    const boxQuantityIncrement = (boxQuantity) => {\r\n        \r\n        setCurrentBoxQuantity((boxQuantity) => {\r\n            boxQuantity = boxQuantity + 1;\r\n            setBoxInfoColor(boxQuantity);\r\n\r\n            return boxQuantity;\r\n        });\r\n\r\n    }\r\n\r\n    const boxQuantityDecrement = (boxQuantity) => {\r\n\r\n        setCurrentBoxQuantity((boxQuantity) => {\r\n            boxQuantity = boxQuantity - 1;\r\n            setBoxInfoColor(boxQuantity);\r\n\r\n            return boxQuantity;\r\n        });\r\n\r\n    }\r\n\r\n    const setBoxInfoColor = (boxQuantity) => {\r\n        if (totalBoxQuantity == boxQuantity) {\r\n            setBoxInfoNumberColor('#089348');\r\n        }\r\n        else if (totalBoxQuantity - boxQuantity > 0) {\r\n            setBoxInfoNumberColor('#000000')\r\n        }\r\n        else if (totalBoxQuantity - boxQuantity < 0) {\r\n            setBoxInfoNumberColor('#f00');\r\n        }\r\n    }\r\n\r\n    const changePriceAccToBox = (size) => {\r\n        switch (size) {\r\n            case 'S':\r\n                setPrice('13,50');\r\n                break;\r\n            case 'M':\r\n                setPrice('24,50');\r\n                break;\r\n            case 'L':\r\n                setPrice('47,50');\r\n                break;\r\n            case 'XL':\r\n                setPrice('56,60');\r\n                break;\r\n        }\r\n    }\r\n\r\n    const validateAndContinue = () => {\r\n        if (currentBoxQuantity !== totalBoxQuantity) {\r\n            setReminderDisplay('block');\r\n        }\r\n        else {\r\n            history.push({\r\n                pathname: '/buyer-info',\r\n                boxContent: boxContent,\r\n                totalBoxQuantity: totalBoxQuantity\r\n            });\r\n        }\r\n    }\r\n\r\n    const grainyBillyAdd = () => {\r\n        setBoxContent({\r\n            ...boxContent,\r\n            grainyBilly: boxContent.grainyBilly += 1\r\n        })\r\n        \r\n        boxQuantityIncrement(currentBoxQuantity);\r\n        changeBoxInfoDisplay();\r\n    }\r\n\r\n    const grainyBillyRemove = (event) => {\r\n        if (boxContent.grainyBilly != 0) {\r\n            setBoxContent({\r\n                ...boxContent,\r\n                grainyBilly: boxContent.grainyBilly -= 1\r\n            })\r\n        }\r\n        \r\n        if (event.target.nextSibling.value != 0) {\r\n            boxQuantityDecrement(currentBoxQuantity);\r\n            changeBoxInfoDisplay();\r\n        }\r\n    }\r\n\r\n    const crispyCarrieAdd = () => {\r\n        setBoxContent({\r\n            ...boxContent,\r\n            crispyCarrie: boxContent.crispyCarrie += 1\r\n        })\r\n        \r\n        boxQuantityIncrement(currentBoxQuantity);\r\n        changeBoxInfoDisplay();\r\n    }\r\n\r\n    const crispyCarrieRemove = (event) => {\r\n        if (boxContent.crispyCarrie != 0) {\r\n            setBoxContent({\r\n                ...boxContent,\r\n                crispyCarrie: boxContent.crispyCarrie -= 1\r\n            })\r\n        }\r\n        \r\n        if (event.target.nextSibling.value != 0) {\r\n            boxQuantityDecrement(currentBoxQuantity);\r\n            changeBoxInfoDisplay();\r\n        }\r\n    }\r\n\r\n    const creamyCarolAdd = () => {\r\n        setBoxContent({\r\n            ...boxContent,\r\n            creamyCarol: boxContent.creamyCarol += 1\r\n        })\r\n        \r\n        boxQuantityIncrement(currentBoxQuantity);\r\n        changeBoxInfoDisplay();\r\n    }\r\n\r\n    const creamyCarolRemove = (event) => {\r\n        if (boxContent.creamyCarol != 0) {\r\n            setBoxContent({\r\n                ...boxContent,\r\n                creamyCarol: boxContent.creamyCarol -= 1\r\n            })\r\n        }\r\n        \r\n        if (event.target.nextSibling.value != 0) {\r\n            boxQuantityDecrement(currentBoxQuantity);\r\n            changeBoxInfoDisplay();\r\n        }\r\n    }\r\n\r\n    const grainySueAdd = () => {\r\n        setBoxContent({\r\n            ...boxContent,\r\n            grainySue: boxContent.grainySue += 1\r\n        })\r\n        \r\n        boxQuantityIncrement(currentBoxQuantity);\r\n        changeBoxInfoDisplay();\r\n    }\r\n\r\n    const grainySueRemove = (event) => {\r\n        if (boxContent.grainySue != 0) {\r\n            setBoxContent({\r\n                ...boxContent,\r\n                grainySue: boxContent.grainySue -= 1\r\n            })\r\n        }\r\n        \r\n        if (event.target.nextSibling.value != 0) {\r\n            boxQuantityDecrement(currentBoxQuantity);\r\n            changeBoxInfoDisplay();\r\n        }\r\n    }\r\n\r\n    const fitFionaAdd = () => {\r\n        setBoxContent({\r\n            ...boxContent,\r\n            fitFiona: boxContent.fitFiona += 1\r\n        })\r\n        \r\n        boxQuantityIncrement(currentBoxQuantity);\r\n        changeBoxInfoDisplay();\r\n    }\r\n\r\n    const fitFionaRemove = (event) => {\r\n        if (boxContent.fitFiona != 0) {\r\n            setBoxContent({\r\n                ...boxContent,\r\n                fitFiona: boxContent.fitFiona -= 1\r\n            })\r\n        }\r\n        \r\n        if (event.target.nextSibling.value != 0) {\r\n            boxQuantityDecrement(currentBoxQuantity);\r\n            changeBoxInfoDisplay();\r\n        }\r\n    }\r\n\r\n    const richArnoldAdd = () => {\r\n        setBoxContent({\r\n            ...boxContent,\r\n            richArnold: boxContent.richArnold += 1\r\n        })\r\n        \r\n        boxQuantityIncrement(currentBoxQuantity);\r\n        changeBoxInfoDisplay();\r\n    }\r\n\r\n    const richArnoldRemove = (event) => {\r\n        if (boxContent.richArnold != 0) {\r\n            setBoxContent({\r\n                ...boxContent,\r\n                richArnold: boxContent.richArnold -= 1\r\n            })\r\n        }\r\n        \r\n        if (event.target.nextSibling.value != 0) {\r\n            boxQuantityDecrement(currentBoxQuantity);\r\n            changeBoxInfoDisplay();\r\n        }\r\n    }\r\n\r\n    const speedyTomAdd = () => {\r\n        setBoxContent({\r\n            ...boxContent,\r\n            speedyTom: boxContent.speedyTom += 1\r\n        })\r\n        \r\n        boxQuantityIncrement(currentBoxQuantity);\r\n        changeBoxInfoDisplay();\r\n    }\r\n\r\n    const speedyTomRemove = (event) => {\r\n        if (boxContent.speedyTom != 0) {\r\n            setBoxContent({\r\n                ...boxContent,\r\n                speedyTom: boxContent.speedyTom -= 1\r\n            })\r\n        }\r\n        \r\n        if (event.target.nextSibling.value != 0) {\r\n            boxQuantityDecrement(currentBoxQuantity);\r\n            changeBoxInfoDisplay();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"mixed-box\">\r\n            <h1>Mám chuť na<br />na poriadnu čokoládu!</h1>\r\n            <h2>veľkosť boxu</h2>\r\n            <ul className=\"select-box-size\">\r\n                <li><button onClick={toggleBoxSize}>S</button></li>\r\n                <li><button onClick={toggleBoxSize}>M</button></li>\r\n                <li><button onClick={toggleBoxSize}>L</button></li>\r\n                <li><button onClick={toggleBoxSize}>XL</button></li>\r\n            </ul>\r\n            <h2>tyčinky v boxe</h2>\r\n            <ul className=\"select-box-content\">\r\n                <li>\r\n                    <img src=\"/img/mutual/grainybilly-bar.png\"></img>\r\n                    Grainy Billy\r\n                    <div className=\"bar-quantity\">\r\n                        <button onClick={grainyBillyRemove}>-</button>\r\n                        <input value={boxContent.grainyBilly} type=\"text\" readOnly />\r\n                        <button onClick={grainyBillyAdd}>+</button>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/img/mutual/creamycarol-bar.png\"></img>\r\n                    Creamy Carol\r\n                    <div className=\"bar-quantity\">\r\n                        <button onClick={creamyCarolRemove}>-</button>\r\n                        <input value={boxContent.creamyCarol} type=\"text\" readOnly />\r\n                        <button onClick={creamyCarolAdd}>+</button>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/img/mutual/crispycarrie-bar.png\"></img>\r\n                    Crispy Carrie\r\n                    <div className=\"bar-quantity\">\r\n                        <button onClick={crispyCarrieRemove}>-</button>\r\n                        <input value={boxContent.crispyCarrie} type=\"text\" readOnly />\r\n                        <button onClick={crispyCarrieAdd}>+</button>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/img/mutual/grainysue-bar.png\"></img>\r\n                    Grainy Sue\r\n                    <div className=\"bar-quantity\">\r\n                        <button onClick={grainySueRemove}>-</button>\r\n                        <input value={boxContent.grainySue} type=\"text\" readOnly />\r\n                        <button onClick={grainySueAdd}>+</button>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/img/mutual/fitfiona-bar.png\"></img>\r\n                    Fit Fiona\r\n                    <div className=\"bar-quantity\">\r\n                        <button onClick={fitFionaRemove}>-</button>\r\n                        <input value={boxContent.fitFiona} type=\"text\" readOnly />\r\n                        <button onClick={fitFionaAdd}>+</button>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/img/mutual/richarnold-bar.png\"></img>\r\n                    Rich Arnold\r\n                    <div className=\"bar-quantity\">\r\n                        <button onClick={richArnoldRemove}>-</button>\r\n                        <input value={boxContent.richArnold} type=\"text\" readOnly />\r\n                        <button onClick={richArnoldAdd}>+</button>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/img/mutual/speedytom-bar.png\"></img>\r\n                    Speedy Tom\r\n                    <div className=\"bar-quantity\">\r\n                        <button onClick={speedyTomRemove}>-</button>\r\n                        <input value={boxContent.speedyTom} type=\"text\" readOnly />\r\n                        <button onClick={speedyTomAdd}>+</button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <h3 style={{ display: boxInfoDisplay }}>\r\n                Zostávajúci počet tyčiniek v boxe: \r\n                <strong style={{ color: boxInfoNumberColor }}>\r\n                    {totalBoxQuantity - currentBoxQuantity}\r\n                </strong>\r\n            </h3>\r\n            <h4 style={{ display: boxInfoDisplay }}>Celkom: <strong>{price}€</strong></h4>\r\n            <span style={{ \r\n                color: 'red',\r\n                display: reminderDisplay,\r\n                textAlign: 'center',\r\n                fontFamily: 'Open Sans Bold',\r\n                marginTop: '2vh'\r\n            }}\r\n            >\r\n                Uveďte správny počet tyčiniek podľa veľkosti boxu.\r\n            </span>\r\n            <button onClick={validateAndContinue} style={{ display: boxInfoDisplay }} className=\"continue\">Mám vybraté!</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuyerInformationForm","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/ZasadyOchranyOsobnychUdajov.js",[],"/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/CheckBuyerInformation.js",["142","143","144","145","146","147","148","149"],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\nconst CheckBuyerInformation = () => {\r\n\r\n\r\n    let location = useLocation();\r\n\r\n    //const [boxContent, setBoxContent] = React.useState();\r\n    //const [totalBoxQuantity, setTotalBoxQuantity] = React.useState();\r\n    const [billingInformation, setBillingInformation] = React.useState(location.buyerInformation);\r\n    const [deliveryInformation, setDeliveryInformation] = React.useState({\r\n        firstName: \"-\",\r\n        lastName: \"-\",\r\n        address: \"-\",\r\n        city: \"-\",\r\n        zipCode: \"-\"\r\n    });\r\n    const [secondFormDisplay, setSecondFormDisplay] = React.useState(\"none\");\r\n    const [buttonMarginTop, setButtonMarginTop] = React.useState(\"10vh\");\r\n\r\n    const firstNameInput = React.useRef();\r\n    const lastNameInput = React.useRef();\r\n    const adressInput = React.useRef();\r\n    const cityInput = React.useRef();\r\n    const zipCodeInput = React.useRef();\r\n    const phoneInput = React.useRef();\r\n    const emailInput = React.useRef();\r\n\r\n    const deliveryFirstNameInput = React.useRef();\r\n    const deliveryLastNameInput = React.useRef();\r\n    const deliveryAddressInput = React.useRef();\r\n    const deliveryCityInput = React.useRef();\r\n    const deliveryZipCodeInput = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        firstNameInput.current.value = billingInformation.firstName;\r\n        lastNameInput.current.value = billingInformation.lastName;\r\n        adressInput.current.value = billingInformation.address;\r\n        cityInput.current.value = billingInformation.city;\r\n        zipCodeInput.current.value = billingInformation.zipCode;\r\n        phoneInput.current.value = billingInformation.phone;\r\n        emailInput.current.value = billingInformation.email;\r\n        console.log(location);\r\n    }, [])\r\n\r\n    const changeBillingInformation = (event) => {\r\n        setBillingInformation(() => {\r\n            let newBillingInformation = billingInformation;\r\n            newBillingInformation[event.target.name] = event.target.value;\r\n       \r\n            return newBillingInformation;\r\n        });;\r\n    }\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        if (secondFormDisplay === \"none\") {\r\n            setSecondFormDisplay(\"block\");\r\n            setButtonMarginTop(\"4vh\");\r\n        }\r\n        else {\r\n            setSecondFormDisplay(\"none\");\r\n            setButtonMarginTop(\"10vh\");\r\n        }\r\n    }\r\n\r\n    const handleConfirmCheckout = () => {\r\n        if (deliveryFirstNameInput.current.value.length == 0 ||\r\n            deliveryLastNameInput.current.value.length == 0 ||\r\n            deliveryAddressInput.current.value.length == 0 ||\r\n            deliveryCityInput.current.value.length == 0 ||\r\n            deliveryZipCodeInput.current.value.length == 0 \r\n        ) {\r\n            setDeliveryInformation(() => {\r\n                let newDeliveryInformation = deliveryInformation;\r\n    \r\n                newDeliveryInformation.firstName = billingInformation.firstName;\r\n                newDeliveryInformation.lastName = billingInformation.lastName;\r\n                newDeliveryInformation.address = billingInformation.address;\r\n                newDeliveryInformation.city = billingInformation.city;\r\n                newDeliveryInformation.zipCode = billingInformation.zipCode;\r\n\r\n                return newDeliveryInformation\r\n            })\r\n        }\r\n        else {\r\n            setDeliveryInformation(() => {\r\n                let newDeliveryInformation = deliveryInformation;\r\n    \r\n                newDeliveryInformation.firstName = deliveryFirstNameInput.current.value;\r\n                newDeliveryInformation.lastName = deliveryLastNameInput.current.value;\r\n                newDeliveryInformation.address = deliveryAddressInput.current.value;\r\n                newDeliveryInformation.city = deliveryCityInput.current.value;\r\n                newDeliveryInformation.zipCode = deliveryZipCodeInput.current.value;\r\n            })\r\n        }\r\n        \r\n        console.log(\r\n            location.afterDiscount,\r\n            location.boxContent,\r\n            location.totalBoxQuantity,\r\n            location.price,\r\n            billingInformation,\r\n            deliveryInformation,\r\n            location.paymentMethod,\r\n            location.shippingMethod\r\n        );\r\n    }\r\n\r\n    if (location.buyerInformation && location.boxContent && location.totalBoxQuantity) \r\n    return (\r\n        <div className=\"check-buyer-info\">\r\n            <h1>Máme správne údaje?</h1>\r\n            <h3>(Upravíte kliknutím na údaj)</h3>\r\n            <div className=\"billing-information\">\r\n                <ul>\r\n                    <li>Meno:</li>\r\n                    <li>Priezvisko:</li>\r\n                    <li>Ulica:</li>\r\n                    <li>Mesto:</li>\r\n                    <li>PSČ:</li>\r\n                    <li>Telefónne číslo:</li>\r\n                    <li>Email:</li>\r\n                </ul>\r\n                <form>\r\n                    <input onChange={changeBillingInformation} type=\"text\" name=\"firstName\" ref={firstNameInput} />\r\n                    <input onChange={changeBillingInformation} type=\"text\" name=\"lastName\" ref={lastNameInput} />\r\n                    <input onChange={changeBillingInformation} type=\"text\" name=\"address\" ref={adressInput} />\r\n                    <input onChange={changeBillingInformation} type=\"text\" name=\"city\" ref={cityInput} />\r\n                    <input onChange={changeBillingInformation} type=\"text\" name=\"zipCode\" ref={zipCodeInput} />\r\n                    <input onChange={changeBillingInformation} type=\"text\" name=\"phone\" ref={phoneInput} />\r\n                    <input onChange={changeBillingInformation} type=\"email\" name=\"email\" ref={emailInput} />\r\n                </form>\r\n            </div>\r\n            <label><input onChange={handleCheckboxChange} type=\"checkbox\" />Na doručenie použiť odlišnú adresu</label>\r\n            <div style={{ display: secondFormDisplay }} className=\"different-address-delivery\">\r\n                <form>\r\n                    <input ref={deliveryFirstNameInput} type=\"text\" placeholder=\"Meno\" name=\"deliverToFirstName\"></input>\r\n                    <input ref={deliveryLastNameInput} type=\"text\" placeholder=\"Priezvisko\" name=\"deliverToLastName\"></input>\r\n                    <input ref={deliveryAddressInput} type=\"text\" placeholder=\"Adresa\" name=\"deliverToAddress\"></input>\r\n                    <input ref={deliveryCityInput} type=\"text\" placeholder=\"Mesto\" name=\"deliverToCity\"></input>\r\n                    <input ref={deliveryZipCodeInput} type=\"text\" placeholder=\"PSČ\" name=\"deliverToZipCode\"></input>\r\n                </form>\r\n            </div>\r\n            <div className=\"flex\">\r\n                <button onClick={handleConfirmCheckout} style={{ marginTop: buttonMarginTop }} className=\"confirm\">\r\n                    Objednať\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n    else return (\r\n        <Redirect to=\"/\" />\r\n    )\r\n}\r\n\r\nexport default CheckBuyerInformation","/Users/pro/Documents/www/simplychocolate.com/src/components/Mobile.js",[],"/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/ShippingAndPaymentMethod.js",["150","151"],"import React from 'react';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport 'whatwg-fetch';\r\n\r\nimport CHECK_SELECTED_PLACE from '../../config/endpoints';\r\n\r\nconst URL = CHECK_SELECTED_PLACE;\r\n\r\nconst ShippingAndPaymentMethod = () => {\r\n\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n\r\n    const [boxContent, setBoxContent] = React.useState();\r\n    const [totalBoxQuantity, setTotalBoxQuantity] = React.useState();\r\n    const [price, setPrice] = React.useState();\r\n    const [buyerInformation, setBuyerInformation] = React.useState();\r\n    const [afterDiscount, setAfterDiscount] = React.useState(false);\r\n    const [afterDiscountDisplay, setAfterDiscountDisplay] = React.useState(\"none\");\r\n    const [wrongCodeDisplay, setWrongCodeDisplay] = React.useState(\"none\");\r\n    const [paymentMethod, setPaymentMethod] = React.useState(false);\r\n    const [paymentMethodFee, setPaymentMethodFee] = React.useState(0);\r\n    const [shippingMethod, setShippingMethod] = React.useState(false);\r\n    const [shippingMethodFee, setShippingMethodFee] = React.useState(0);\r\n    const [depoDisplay, setDepoDisplay] = React.useState(\"none\");\r\n    const [selectDeliveryPointDisplay, setSelectDeliveryPointDisplay] = React.useState(\"none\");\r\n\r\n    const discountCodeInput = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        setBoxContent(location.boxContent);\r\n        setTotalBoxQuantity(location.totalBoxQuantity);\r\n        setPrice(location.price);\r\n        setBuyerInformation(location.buyerInformation);\r\n    }, [])\r\n\r\n    const discountCodes = ['SIMPLY5', 'SIMPLY10'];\r\n\r\n    const formatToNumber = (string, typeOfString) => {\r\n        if (typeOfString === 'price') {\r\n            return parseFloat(string.replace(/,/g, '.'));\r\n        }\r\n        else if (typeOfString === 'discountCode') {\r\n            return parseFloat(string.replace(/\\D/g, ''));\r\n        }\r\n    }\r\n\r\n    const formatToPrice = (number) => {\r\n        return number.toFixed(2).toString().replace(/\\./g, \",\");\r\n    }\r\n\r\n    const handleDiscount = () => {\r\n        let discountCode = discountCodeInput.current.value.toUpperCase();\r\n\r\n        if (!afterDiscount && discountCodes.includes(discountCode)) {\r\n            let discountPercent = formatToNumber(discountCode, 'discountCode');\r\n            let pricePercentAfterDiscount = 100 - discountPercent;\r\n\r\n            setPrice(() => {\r\n                let priceAfterDiscount = formatToNumber(location.price, 'price') / 100 * pricePercentAfterDiscount;\r\n                return formatToPrice(priceAfterDiscount);\r\n            });\r\n\r\n            setAfterDiscount(true);\r\n            setWrongCodeDisplay(\"none\");\r\n            setAfterDiscountDisplay(\"block\");\r\n        }\r\n        else if (discountCode !== \"\" && !afterDiscount && !discountCodes.includes(discountCode)) {\r\n            setWrongCodeDisplay(\"block\");\r\n        }\r\n    }\r\n\r\n    const setNewPaymentMethodFee = (newPaymentMethodFee) => {\r\n        setPaymentMethodFee(() => {\r\n            setPrice(\r\n                formatToPrice(formatToNumber(price, \"price\") - paymentMethodFee + newPaymentMethodFee)\r\n            )\r\n            return newPaymentMethodFee;\r\n        });\r\n    }\r\n\r\n    const setNewShippingMethodFee = (newShippingMethodFee) => {\r\n        setShippingMethodFee(() => {\r\n            setPrice(\r\n                formatToPrice(formatToNumber(price, \"price\") - shippingMethodFee + newShippingMethodFee)\r\n            )\r\n            return newShippingMethodFee;\r\n        });\r\n    }\r\n\r\n    const toggleDepoDisplay = (selectedShippingMethod) => {\r\n        if (selectedShippingMethod === \"deliveryPoint\") {\r\n            setDepoDisplay(() => \"block\");\r\n        }\r\n        else {\r\n            setDepoDisplay(() => \"none\");\r\n        }\r\n    }\r\n\r\n    const handleSetPayment = (event) => {\r\n        let newPaymentMethod = event.target.value;\r\n\r\n        if (newPaymentMethod === \"cash\") {\r\n            setNewPaymentMethodFee(1);\r\n        }\r\n        else if (newPaymentMethod === \"online\") {\r\n            setNewPaymentMethodFee(0);\r\n        }\r\n\r\n        setPaymentMethod(newPaymentMethod);\r\n    }\r\n\r\n    const handleSetShipping = (event) => {\r\n        let newShippingMethod = event.target.value;\r\n\r\n        if (newShippingMethod === \"courier\") {\r\n            setNewShippingMethodFee(3.50);\r\n            toggleDepoDisplay(newShippingMethod);\r\n        }\r\n        else if (newShippingMethod === \"deliveryPoint\") {\r\n            setNewShippingMethodFee(1.70);\r\n            toggleDepoDisplay(newShippingMethod);\r\n        }\r\n        else if (newShippingMethod === \"pickUpAtStore\") {\r\n            setNewShippingMethodFee(0.00);\r\n            toggleDepoDisplay(newShippingMethod);\r\n        }\r\n\r\n        setShippingMethod(newShippingMethod);\r\n    }\r\n\r\n    let orderId;\r\n    const generateOrderId = () => {\r\n        let now = Date.now().toString(); // 13 char number\r\n        // pad with extra random digit\r\n        now += now + Math.floor(Math.random() * 10);\r\n        // format\r\n        orderId = [now.slice(0, 4), now.slice(4, 10), now.slice(10, 14)].join('-');\r\n        console.log(process.env.NODE_ENV);\r\n        return orderId;\r\n    }\r\n\r\n    let placeSelected;\r\n    const selectedPlaceDeliveryPoint = async () => {\r\n        if (shippingMethod === \"deliveryPoint\") {\r\n            const response = await window.fetch(URL, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ orderId: orderId })\r\n            });\r\n\r\n            placeSelected = await response.json();\r\n            console.log(placeSelected);\r\n\r\n            if (placeSelected.is_selected === 1) {\r\n                setSelectDeliveryPointDisplay(() => \"none\");\r\n                return true\r\n            }\r\n            else {\r\n                setSelectDeliveryPointDisplay(() => \"block\");\r\n                return false\r\n            }\r\n        }\r\n        else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    const handleContinue = async () => {\r\n        if (paymentMethod && shippingMethod) {\r\n            const isPlaceSelected = await selectedPlaceDeliveryPoint();\r\n\r\n            if (isPlaceSelected) {\r\n                history.push({\r\n                    pathname: \"/buyer-info-check\",\r\n                    boxContent: boxContent,\r\n                    totalBoxQuantity: totalBoxQuantity,\r\n                    price: price,\r\n                    buyerInformation: buyerInformation,\r\n                    paymentMethod: paymentMethod,\r\n                    shippingMethod: shippingMethod,\r\n                    afterDiscount: afterDiscount,\r\n                    selectedPlace: placeSelected,\r\n                    orderId: orderId\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    if (location.boxContent && location.totalBoxQuantity && location.price && location.buyerInformation)\r\n        return (\r\n            <div className=\"shipping-and-payment-method\">\r\n                <h1>Táto čokoláda stojí za to <strong>{price}&nbsp;€</strong></h1>\r\n                <span style={{ display: afterDiscountDisplay }}>(po zľave)</span>\r\n                <span style={{ display: wrongCodeDisplay, color: 'red' }}>Nesprávny zľavový kód.</span>\r\n                <div className=\"discount\">\r\n                    <h2>Mám zľavový kupón</h2>\r\n                    <input ref={discountCodeInput} type=\"text\" />\r\n                    <button onClick={handleDiscount}><i class=\"fas fa-check\"></i></button>\r\n                </div>\r\n                <div className=\"payment-method\">\r\n                    <h2>Ako budeš platiť?</h2>\r\n                    <div>\r\n                        <label>\r\n                            <input onClick={handleSetPayment} value=\"online\" name=\"payment-method\" type=\"radio\" />\r\n                        Online platba\r\n                    </label>\r\n                        <p>+ 0,00 €</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <input onClick={handleSetPayment} value=\"cash\" name=\"payment-method\" type=\"radio\" />\r\n                        Dobierka\r\n                    </label>\r\n                        <p>+ 1,00 €</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"shipping-method\">\r\n                    <h2>Ako chces box doručiť?</h2>\r\n                    <div>\r\n                        <label>\r\n                            <input onClick={handleSetShipping} value=\"courier\" name=\"shipping-method\" type=\"radio\" />\r\n                        Kuriérom k tebe domov\r\n                    </label>\r\n                        <p>+ 3,50 €</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <input onClick={handleSetShipping} value=\"pickUpAtStore\" name=\"shipping-method\" type=\"radio\" />\r\n                        Osobný odber\r\n                    </label>\r\n                        <p>+ 0,00 €</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <input onClick={handleSetShipping} value=\"deliveryPoint\" name=\"shipping-method\" type=\"radio\" />\r\n                        Odberné miesto\r\n                    </label>\r\n                        <p>+ 1,70 €</p>\r\n                    </div>\r\n                    <iframe\r\n                        className=\"depo-integration\"\r\n                        style={{ display: depoDisplay }}\r\n                        src={`https://admin.depo.sk/eshop?c=223&o=${generateOrderId()}`}\r\n                        frameBorder=\"0\"\r\n                    >\r\n                    </iframe>\r\n                </div>\r\n                <span\r\n                    style={{\r\n                        display: selectDeliveryPointDisplay,\r\n                        color: \"red\",\r\n                        marginTop: \"3vh\"\r\n                    }}\r\n                >\r\n                    Vyber si odberné miesto.\r\n            </span>\r\n                <div className=\"flex\">\r\n                    <button onClick={handleContinue} className=\"confirm\">Pokračovať</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    else return (\r\n        <Redirect to=\"/\" />\r\n    )\r\n\r\n}\r\n\r\nexport default ShippingAndPaymentMethod","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/FinalCheck.js",["152","153","154","155","156","157","158","159","160","161"],"import React from 'react';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst FinalCheck = () => {\r\n\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n\r\n    const [boxContent, setBoxContent] = React.useState({\r\n        grainyBilly: 0,\r\n        creamyCarol: 0,\r\n        crispyCarrie: 0,\r\n        grainySue: 0,\r\n        fitFiona: 0,\r\n        richArnold: 0,\r\n        speedyTom: 0\r\n    });\r\n    const [totalBoxQuantity, setTotalBoxQuantity] = React.useState(0);\r\n    const [price, setPrice] = React.useState();\r\n    const [buyerInformation, setBuyerInformation] = React.useState({});\r\n\r\n    React.useEffect(() => {\r\n        setBoxContent(location.boxContent);\r\n        setTotalBoxQuantity(location.totalBoxQuantity);\r\n        setBuyerInformation(location.buyerInformation);\r\n\r\n        switch (location.totalBoxQuantity) {\r\n            case 6:\r\n                setPrice(\"13,50\");\r\n                break;\r\n            case 12:\r\n                setPrice(\"24,50\");\r\n                break;\r\n            case 24:\r\n                setPrice(\"47,50\");\r\n                break;\r\n            case 30:\r\n                setPrice(\"56,60\");\r\n                break;\r\n        }\r\n    }, [])\r\n\r\n    const handleContinue = () => {\r\n        history.push({\r\n            pathname: \"/shipping-and-payment-method\",\r\n            boxContent: boxContent,\r\n            totalBoxQuantity: totalBoxQuantity,\r\n            price: price,\r\n            buyerInformation: buyerInformation\r\n        })\r\n    }\r\n\r\n    const handleBack = () => {\r\n        history.push({\r\n            pathname: \"/buyer-info\",\r\n            boxContent: boxContent,\r\n            totalBoxQuantity: totalBoxQuantity,\r\n        })\r\n    }\r\n\r\n    if (location.boxContent && location.totalBoxQuantity) return (\r\n        <div className=\"final-check\">\r\n            <h1>Lásku si za peniaze nekúpiš,<br />čokoládu ÁNO!</h1>\r\n            <h2>Už skoro u teba doma...</h2>\r\n            <ul className=\"products-to-purchase\">\r\n                <li><img src=\"/img/mutual/grainybilly-bar.png\" />Grainy Billy <strong>{boxContent.grainyBilly}</strong></li>\r\n                <li><img src=\"/img/mutual/creamycarol-bar.png\" />Creamy Carol <strong>{boxContent.creamyCarol}</strong></li>\r\n                <li><img src=\"/img/mutual/crispycarrie-bar.png\" />Crispy Carrie <strong>{boxContent.crispyCarrie}</strong></li>\r\n                <li><img src=\"/img/mutual/grainysue-bar.png\" />Grainy Sue <strong>{boxContent.grainySue}</strong></li>\r\n                <li><img src=\"/img/mutual/fitfiona-bar.png\" />Fit Fiona<strong>{boxContent.fitFiona}</strong></li>\r\n                <li><img src=\"/img/mutual/richarnold-bar.png\" />Rich Arnold <strong>{boxContent.richArnold}</strong></li>\r\n                <li><img src=\"/img/mutual/speedytom-bar.png\" />Speedy Tom <strong>{boxContent.speedyTom}</strong></li>\r\n                <li>Celkom: <strong>{price}&nbsp;€</strong></li>\r\n            </ul>\r\n            <div style={{ \r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }}>\r\n            <a \r\n            onClick={handleBack}\r\n            style={{\r\n                fontFamily: 'Open Sans',\r\n                textDecoration: 'underline',\r\n                marginRight: '4em',\r\n                cursor: 'pointer',\r\n                fontSize: '1.05em'\r\n            }}>\r\n                Späť\r\n            </a>\r\n            <button onClick={handleContinue} className=\"continue\">Pokračovať</button>\r\n            </div>\r\n        </div>\r\n    )\r\n    else return (\r\n        <Redirect to=\"/\" />\r\n    )\r\n}\r\n\r\nexport default FinalCheck","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/BuyerInformation.js",["162","163"],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\nconst BuyerInformation = () => {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n\r\n    const [boxContent, setBoxContent] = React.useState();\r\n    const [totalBoxQuantity, setTotalBoxQuantity] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        setBoxContent(location.boxContent);\r\n        setTotalBoxQuantity(location.totalBoxQuantity);\r\n    }, [])\r\n\r\n    const validateAndContinue = (formData) => {\r\n        history.push({\r\n            pathname: \"/final-check\",\r\n            boxContent: boxContent,\r\n            totalBoxQuantity: totalBoxQuantity,\r\n            buyerInformation: formData\r\n        })\r\n    }\r\n\r\n    if (location.boxContent && location.totalBoxQuantity) \r\n    return (\r\n        <div className=\"buyer-info\">\r\n            <img className=\"logo-checkout\" src=\"/img/desktop/logo-black.png\"></img>\r\n            <h1>Čokoláda je odpoveď,<br />koho zaujíma aká je otázka?</h1>\r\n            <h2>Priamo k tebe domov!</h2>\r\n            <form onSubmit={handleSubmit(validateAndContinue)}>\r\n                <input type=\"text\" name=\"firstName\" placeholder=\"Meno\" ref={register({ required: true })} />\r\n                <input type=\"text\" name=\"lastName\" placeholder=\"Priezvisko\" ref={register({ required: true })} />\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" ref={register({ required: true })} />\r\n                <input type=\"text\" name=\"phone\" placeholder=\"Telefónne číslo (09XX...)\" ref={register({ required: true })} />\r\n                <input type=\"text\" name=\"address\" placeholder=\"Ulica s číslom\" ref={register({ required: true })} />\r\n                <input type=\"text\" name=\"city\" placeholder=\"Mesto\" ref={register({ required: true })} />\r\n                <input type=\"text\" name=\"country\" placeholder=\"Krajina\" ref={register({ required: true })} />\r\n                <input type=\"text\" name=\"zipCode\" placeholder=\"PSČ\" ref={register({ required: true })} />\r\n                <button type=\"submit\">Už iba krok k dokonalosti!</button>\r\n            </form>\r\n        </div>\r\n    )\r\n    else return (\r\n        <Redirect to=\"/\" />\r\n    )\r\n}\r\n\r\nexport default BuyerInformation","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/ObchodnePodmienky.js",[],"/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/IntroDesktop.js",["164","165","166"],"import React from 'react';\r\nimport ReactCompareImage from 'react-compare-image';\r\nimport Typical from 'react-typical';\r\nimport Burger from '@animated-burgers/burger-squeeze'\r\nimport Menu from '../mutual/Menu';\r\n\r\nconst IntroDesktop = () => {\r\n\r\n    const [burgerState, setBurgerState] = React.useState(false);\r\n\r\n    const toggleBurger = () => {\r\n        if (burgerState) {\r\n            setBurgerState(false);\r\n        }\r\n        else {\r\n            setBurgerState(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"desktop-section\" style={{ position: \"relative\" }}>\r\n                <Burger \r\n                    isOpen={burgerState}\r\n                    onClick={toggleBurger}\r\n                    style={{ \r\n                        position: 'absolute', \r\n                        zIndex: '2',\r\n                        margin: '3em'\r\n                    }}\r\n                />\r\n                <Menu \r\n                    display={ burgerState ? 'block' : 'none' }\r\n                    burgerState={burgerState}\r\n                    toggleBurger={toggleBurger}\r\n                />\r\n                <i\r\n                    class=\"fas fa-arrow-down\"\r\n                    style={{\r\n                        position: 'absolute',\r\n                        color: '#fff',\r\n                        bottom: '2%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, 0)',\r\n                        zIndex: '2',\r\n                        fontSize: '1.24em',\r\n                    }}\r\n                >\r\n                </i>\r\n                <ReactCompareImage\r\n                    leftImage=\"/img/desktop/intro-left-image.jpg\"\r\n                    leftImageLabel={\r\n                        (\r\n                            <>\r\n                                <div className=\"desktop-intro-shown\">\r\n                                    <h1\r\n                                        className=\"desktop-intro-first-heading desktop-heading\"\r\n                                        style={{ marginBottom: '0' }}\r\n                                    >\r\n                                        yes<br />you can\r\n                                </h1>\r\n                                    <Typical\r\n                                        steps={['', 1400, 'BUY LOVE', 1200]}\r\n                                        loop={Infinity}\r\n                                        wrapper=\"h1\"\r\n                                        className=\"desktop-intro-first-heading desktop-heading\"\r\n                                    />\r\n                                    <img className=\"desktop-intro-icons\" src=\"/img/desktop/icons-white.png\"></img>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    rightImage=\"/img/desktop/intro-right-image.jpg\"\r\n                    rightImageLabel={\r\n                        (\r\n                            <>\r\n                                <div className=\"desktop-intro-hidden-section\">\r\n                                    <div className=\"desktop-intro-hidden-text\">\r\n                                        <h1 className=\"desktop-intro-hidden-heading desktop-heading\">o nás</h1>\r\n                                        <img src=\"/img/desktop/logo-black.png\" className=\"desktop-logo\"></img>\r\n                                        <div className=\"desktop-intro-company-desc\">\r\n                                            <p>\r\n                                                Spoločnosť Simply Chocolate verí, že pravá\r\n                                                čokoládová láska vyžaduje nádych niečoho\r\n                                                nového\r\n                                                a zmysel pre humor.\r\n                                </p>\r\n                                            <p>\r\n                                                Kakao na čokoládu pochádza z Afriky.\r\n                                                Simply Chocolate je súčasťou neziskovej\r\n                                                organizácie Cocoa Horizons, ktorá sa snaží\r\n                                                zabezpečiť, aby kakaovým farmárom, ich rodinám\r\n                                                a miestnym komunitám obklopujúcim kakaové\r\n                                                polia prospievali\r\n                                                a mali príležitosť zlepšovať svoj život.\r\n                                                Rovnako ako zabezpečenie toho,\r\n                                                aby súčasťou výroby nebola žiadna nelegálna\r\n                                                detská práca.\r\n                                </p>\r\n                                            <p>\r\n                                                Spoločnosť má vlastný systém solárnych panelov,\r\n                                                vďaka ktorému je 100% energeticky sebestačná.\r\n                                                Keď svieti slnko, umožňuje spoločnosti vyrábať\r\n                                                čokoládu\r\n                                                s nulovými emisiami CO2.\r\n                                </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <img className=\"desktop-intro-icons\" src=\"img/desktop/icons-black.png\"></img>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    handle={<div\r\n                        style={{ color: \"white\", position: \"relative\", top: \"12em\", fontSize: \"1.75em\" }}\r\n                    >\r\n                        <i style={{ position: \"absolute\", right: \"0.5em\" }} className=\"fas fa-chevron-left intro-left-arrow\"></i>\r\n                        <i style={{ position: \"absolute\", left: \"0.5em\" }} className=\"fas fa-chevron-right intro-right-arrow\"></i>\r\n                    </div>}\r\n                    sliderLineWidth={4}\r\n                />\r\n            </div>\r\n            <div className=\"desktop-section\" style={{ background: `url('/img/desktop/intro-third.png')` }}>\r\n                <div className=\"desktop-intro-second-content\">\r\n                    <h1 className=\"desktop-heading\">\r\n                        viac<br />ako<br />čokoláda\r\n                    </h1>\r\n                    <h2 className=\"desktop-heading\">It's Simply Chocolate.</h2>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default IntroDesktop","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/ContactDesktop.js",["167"],"import React from \"react\";\r\nimport emailjs from \"emailjs-com\"\r\n\r\nconst ContactDesktop = () => {\r\n\r\n    const [sentDisplay, setSentDisplay] = React.useState('none');\r\n\r\n    const showSent = () => {\r\n        setSentDisplay('block');\r\n    }\r\n\r\n    const hideSent = () => {\r\n        setSentDisplay('none');\r\n    }\r\n\r\n    const sendEmail = (event) => {\r\n        event.preventDefault();\r\n\r\n        emailjs.sendForm('service_elvyfji', 'template_w39ybbx', event.target, 'user_uKRxzHXwrKpgUeezjJZMo')\r\n          .then((result) => {\r\n              console.log(result.text);\r\n          }, (error) => {\r\n              console.log(error.text);\r\n          });\r\n        \r\n        event.target.reset();\r\n        showSent();\r\n    }\r\n\r\n    return (\r\n        <div \r\n            style={{ background: `url('/img/desktop/contact.jpg')`, position: \"relative\" }} \r\n            className=\"desktop-section desktop-contact\"\r\n            onClick={hideSent}\r\n        >\r\n            <h1 className=\"desktop-heading desktop-contact-main-heading\">\r\n                máš <br />otázku?\r\n            </h1>\r\n            <h2 className=\"desktop-heading desktop-contact-secondary-heading\">\r\n                neváhaj nás <br />kontaktovať\r\n            </h2>\r\n            <div>\r\n                <img \r\n                    src=\"/img/mobile/logowithoutbreak.png\"\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: \"4%\",\r\n                        left: \"50%\",\r\n                        transform: \"translateX(-50%)\",\r\n                        width: \"18vw\"\r\n                    }}\r\n                ></img>\r\n            </div>\r\n            <form onSubmit={sendEmail}>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Meno\" required />\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n                    <input type=\"text\" name=\"phone\" placeholder=\"Telefónne číslo\" required />\r\n                    <input type=\"text\" name=\"subject\" placeholder=\"Predmet\" required />\r\n                    <textarea name=\"message\" placeholder=\"Správa\" required></textarea>\r\n                    <button type=\"submit\">Odoslať</button>\r\n            </form>\r\n            <div className=\"desktop-contact-methods\">\r\n                <a href=\"tel:+421918596972\">+421 918 596 972</a>&nbsp;&nbsp;&nbsp;\r\n                <a href=\"mailto:info@simplychocolate.sk\">info@simplychocolate.sk</a>\r\n            </div>\r\n            <p\r\n                className=\"desktop-contact-legal\"\r\n                style={{ \r\n                    color: \"#fff\", \r\n                    fontFamily: \"Open Sans\", \r\n                    position: \"absolute\",\r\n                    textAlign: \"center\",\r\n                    bottom: \"0\",\r\n                    left: \"50%\",\r\n                    transform: \"translateX(-50%)\"\r\n                }}\r\n            >\r\n                Odoslaním formuláru dávam spoločnosti P-REDOMA s.r.o., Banskobystrická 148/1 940 02 Nové Zámky, \r\n                IČO: 51408741, súhlas na spracovanie a uchovávanie hore uvedených osobných údajov. \r\n                Viac informácií v dokumente&nbsp;\r\n                <a \r\n                    href=\"/zasady-ochrany-osobnych-udajov\"\r\n                    style={{ \r\n                        cursor: \"pointer\"\r\n                    }}\r\n                >   \r\n                    Zásady ochrany osobných údajov\r\n                </a>.\r\n            </p>\r\n            <div style={{ display: sentDisplay }} className=\"desktop-sent\">\r\n                    správa<br />odoslaná!<br />\r\n                    <i class=\"fas fa-check\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactDesktop","/Users/pro/Documents/www/simplychocolate.com/src/config/endpoints.js",[],"/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/AboutDesktop.js",[],"/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/Products.js",["168","169"],"import React, { useState } from 'react';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Product from './Product';\r\n\r\nconst Products = (props) => {\r\n\r\n    const products = [\r\n\r\n        {\r\n            name: \"grainy billy\",\r\n            icons: \"four\",\r\n            textFirst: \"kokos\",\r\n            textSecond: \"brusnice\",\r\n            textThird: \"prémiová čokoláda\",\r\n            color: \"#a82737\"\r\n        },\r\n\r\n        {\r\n            name: \"creamy carol\",\r\n            icons: \"four\",\r\n            textFirst: \"tekutý karamel\",\r\n            textSecond: \"prémiová tmavá čokoláda\",\r\n            textThird: \"\",\r\n            color: \"#572698\"\r\n        },\r\n\r\n        {\r\n            name: \"crispy carrie\",\r\n            icons: \"four\",\r\n            textFirst: \"chrumkavý karamel\",\r\n            textSecond: \"morská soľ\",\r\n            textThird: \"prémiová mliečna čokoláda\",\r\n            color: \"#b4531a\"\r\n        },\r\n\r\n        {\r\n            name: \"grainy sue\",\r\n            icons: \"three\",\r\n            textFirst: \"ovos, špalda a arašidy\",\r\n            textSecond: \"karamel\",\r\n            textThird: \"prémiová tmavá čokoláda\",\r\n            color: \"#d19c2a\"\r\n        },\r\n\r\n        {\r\n            name: \"fit fiona\",\r\n            icons: \"five\",\r\n            textFirst: \"proteínová tyčinka\",\r\n            textSecond: \"ríbezle\",\r\n            textThird: \"prémiová tmavá čokoláda\",\r\n            color: \"#bd79b8\"\r\n        },\r\n\r\n        {\r\n            name: \"rich arnold\",\r\n            icons: \"five\",\r\n            textFirst: \"proteínová tyčinka\",\r\n            textSecond: \"karamel, arašidy\",\r\n            textThird: \"prémiová tmavá čokoláda\",\r\n            color: \"#eccd5c\"\r\n        },\r\n\r\n        {\r\n            name: \"speedy tom\",\r\n            icons: \"five\",\r\n            textFirst: \"proteínová tyčinka\",\r\n            textSecond: \"acai, kokos a passion fruit\",\r\n            textThird: \"prémiová tmavá čokoláda\",\r\n            color: \"#82babd\"\r\n        },\r\n\r\n    ];\r\n\r\n    const [autoPlay, setAutoPlay] = React.useState(true);\r\n\r\n    const turnOffAutoPlay = () => {\r\n        setAutoPlay(false);\r\n    }\r\n\r\n    return (\r\n        <Carousel autoPlay={false} interval={5000} infiniteLoop className=\"products component\">\r\n\r\n            {\r\n                products.map( product =>\r\n                    <Product\r\n                        name={product.name}\r\n                        icons={product.icons}\r\n                        textFirst={product.textFirst}\r\n                        textSecond={product.textSecond}\r\n                        textThird={product.textThird}\r\n                        color={product.color}\r\n                        onOpenCart={turnOffAutoPlay}\r\n                    />\r\n                )\r\n            }\r\n\r\n        </Carousel>\r\n    )\r\n\r\n}\r\n\r\nexport default Products","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/Contact.js",["170","171"],"import React, { useState } from 'react';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst Contact = () => {\r\n\r\n    const [sentDisplay, setSentDisplay] = React.useState('none');\r\n\r\n    const showSent = () => {\r\n        setSentDisplay('block');\r\n    }\r\n\r\n    const hideSent = () => {\r\n        setSentDisplay('none');\r\n    }\r\n\r\n    const sendEmail = (event) => {\r\n        event.preventDefault();\r\n\r\n        emailjs.sendForm('service_elvyfji', 'template_w39ybbx', event.target, 'user_uKRxzHXwrKpgUeezjJZMo')\r\n          .then((result) => {\r\n              console.log(result.text);\r\n          }, (error) => {\r\n              console.log(error.text);\r\n          });\r\n        \r\n        event.target.reset();\r\n        showSent();\r\n    }\r\n\r\n    return (\r\n        <Carousel className=\"contact component\">\r\n            <div onClick={hideSent} className=\"section\">\r\n                <img src=\"/img/mobile/contact.png\" className=\"slide-bg\" />\r\n                <h1 className=\"heading contact-heading-first\">máš <br />otázku?</h1>\r\n                <h2 className=\"heading contact-heading-second\">\r\n                    neváhaj nás<br />\r\n                    kontaktovať\r\n                </h2>\r\n                <form onSubmit={sendEmail}>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Meno\" required />\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n                    <input type=\"text\" name=\"phone\" placeholder=\"Telefónne číslo\" required />\r\n                    <input type=\"text\" name=\"subject\" placeholder=\"Predmet\" required />\r\n                    <textarea name=\"message\" placeholder=\"Správa\" required></textarea>\r\n                    <button type=\"submit\">Odoslať</button>\r\n                </form>\r\n                <p\r\n                className=\"contact-legal\"\r\n                style={{ \r\n                    color: \"#fff\", \r\n                    fontFamily: \"Open Sans\", \r\n                    textAlign: \"center\",\r\n                    position: \"absolute\",\r\n                    bottom: \"0.1rem\",\r\n                    margin: \"0 0.75rem\"\r\n                }}\r\n            >\r\n                Odoslaním formuláru dávam spoločnosti P-REDOMA s.r.o., Banskobystrická 148/1 940 02 Nové Zámky, \r\n                IČO: 51408741, súhlas na spracovanie a uchovávanie hore uvedených osobných údajov. \r\n                Viac informácií v dokumente&nbsp;\r\n                <a \r\n                    href=\"/zasady-ochrany-osobnych-udajov\"\r\n                    style={{ \r\n                        cursor: \"pointer\"\r\n                    }}\r\n                >   \r\n                    Zásady ochrany osobných údajov\r\n                </a>.\r\n            </p>\r\n                <div style={{ display: sentDisplay }} className=\"sent\">\r\n                    správa odoslaná!<br />\r\n                    <i class=\"fas fa-check\"></i>\r\n                </div>\r\n            </div>\r\n        </Carousel>\r\n    )\r\n\r\n}\r\n\r\nexport default Contact","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/Intro.js",["172","173","174"],"/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/About.js",[],"/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/ProductsDesktop.js",["175"],"import React from \"react\";\r\nimport ProductDesktop from \"./ProductDesktop\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nconst ProductsDesktop = () => {\r\n\r\n    const products = [\r\n\r\n        {\r\n            name: \"grainy billy\",\r\n            icons: \"four\",\r\n            textFirst: \"kokos\",\r\n            textSecond: \"brusnice\",\r\n            textThird: \"prémiová čokoláda\",\r\n            desc: \"Grainy Billy je najlahodnejšia kokosová tyčinka, ktorá ťa svojou chuťou a ľahkosťou nenechá prestať.\",\r\n            color: \"#a82737\"\r\n        },\r\n\r\n        {\r\n            name: \"creamy carol\",\r\n            icons: \"four\",\r\n            textFirst: \"tekutý karamel\",\r\n            textSecond: \"prémiová tmavá čokoláda\",\r\n            textThird: \"\",\r\n            desc: \"Creamy Carol je najlahodnejšia karamelová tyčinka, ktorú vďaka poriadnej dávke karamelu neodložíš.\",\r\n            color: \"#572698\"\r\n        },\r\n\r\n        {\r\n            name: \"crispy carrie\",\r\n            icons: \"four\",\r\n            textFirst: \"chrumkavý karamel\",\r\n            textSecond: \"morská soľ\",\r\n            textThird: \"prémiová mliečna čokoláda\",\r\n            desc: \"Crispy Carrie nie je žiadna poledancerka! Je to jednoducho jedinečná tyčinka z mliečnej čokolády so slaným karamelom.\",\r\n            color: \"#b4531a\"\r\n        },\r\n\r\n        {\r\n            name: \"grainy sue\",\r\n            icons: \"three\",\r\n            textFirst: \"ovos, špalda a arašidy\",\r\n            textSecond: \"karamel\",\r\n            textThird: \"prémiová tmavá čokoláda\",\r\n            desc: \"Grainy Sue je vynikajúca muesli tyčinka, ktorá ťa ráno nakopne na celý deň.\",\r\n            color: \"#d19c2a\"\r\n        },\r\n\r\n        {\r\n            name: \"fit fiona\",\r\n            icons: \"five\",\r\n            textFirst: \"proteínová tyčinka\",\r\n            textSecond: \"ríbezle\",\r\n            textThird: \"prémiová tmavá čokoláda\",\r\n            desc: \"Fit fiona je pravá športovkyňa, ktorá ťa vďaka svojej skvelej chuti a proteínom nenechá len tak ležať pri telke.\",\r\n            color: \"#bd79b8\"\r\n        },\r\n\r\n        {\r\n            name: \"rich arnold\",\r\n            icons: \"five\",\r\n            textFirst: \"proteínová tyčinka\",\r\n            textSecond: \"karamel, arašidy\",\r\n            textThird: \"prémiová tmavá čokoláda\",\r\n            desc: \"Rich Arnold je proteínová tyčinka, ktorá je nabitá chuťami. Táto tyčinka ťa nenechá o hlade.\",\r\n            color: \"#eccd5c\"\r\n        },\r\n\r\n        {\r\n            name: \"speedy tom\",\r\n            icons: \"five\",\r\n            textFirst: \"proteínová tyčinka\",\r\n            textSecond: \"acai, kokos a passion fruit\",\r\n            textThird: \"prémiová tmavá čokoláda\",\r\n            desc: \"Speedy Tom je proteinová tyčinka, ktorá obsahuje kombináciu surovín, ktoré Ti dodajú energiu na celý deň.\",\r\n            color: \"#82babd\"\r\n        }\r\n\r\n    ];\r\n\r\n    return (\r\n        <Carousel className=\"desktop-section\" autoPlay={false} interval={10000} infiniteLoop>\r\n            {\r\n                products.map((product) =>\r\n\r\n                    <ProductDesktop\r\n                        name={product.name}\r\n                        icons={product.icons}\r\n                        desc={product.desc}\r\n                        textFirst={product.textFirst}\r\n                        textSecond={product.textSecond}\r\n                        textThird={product.textThird}\r\n                        desc={product.desc}\r\n                        color={product.color}\r\n                    />\r\n                )\r\n            }\r\n        </Carousel>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductsDesktop","/Users/pro/Documents/www/simplychocolate.com/src/components/mutual/Menu.js",["176","177","178"],"import React from 'react';\r\nimport Burger from '@animated-burgers/burger-squeeze'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Menu = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div \r\n            className=\"menu\" \r\n            style={{ \r\n                display: props.display,\r\n            }}\r\n        >\r\n            <Burger \r\n                    isOpen={props.burgerState}\r\n                    onClick={props.toggleBurger}\r\n                    style={{ \r\n                        position: 'absolute', \r\n                        zIndex: '2',\r\n                        margin: '3em'\r\n                    }}\r\n                />\r\n            <div>\r\n                <img src=\"/img/desktop/logo.png\"></img>\r\n            </div>\r\n            <ul>\r\n                <li><a onClick={props.toggleBurger} href=\"#about\">Simply Story</a></li>\r\n                <li><a onClick={props.toggleBurger} href=\"#products\">Simply e-shop</a></li>\r\n                <li><a onClick={props.toggleBurger} href=\"#contact\">Simply kontakt</a></li>\r\n            </ul>\r\n            <div className=\"legal\">\r\n                <a \r\n                    onClick={() => { history.push({ pathname: \"/zasady-ochrany-osobnych-udajov\" }) }} \r\n                >\r\n                    Zásady ochrany osobných údajov\r\n                </a>\r\n                <a \r\n                    onClick={() => { history.push({ pathname: \"/obchodne-podmienky\" }) }}\r\n                >\r\n                    Všeobecné obchodné podmienky\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/AboutPageDesktop.js",["179"],"import React from 'react';\r\n\r\nconst AboutPageDesktop = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"desktop-section\" style={{ background: `url('/img/desktop/desktop-${props.bg}.png')` }}>\r\n            <div className=\"desktop-about-page-content\">\r\n                <img className=\"desktop-about-icon\" src={`/img/mobile/${props.icon}.png`} />\r\n                <h2 className=\"desktop-about-heading desktop-heading\">{props.heading}</h2>\r\n                <p className=\"desktop-about-desc\">{props.desc}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AboutPageDesktop","/Users/pro/Documents/www/simplychocolate.com/src/components/desktop/ProductDesktop.js",["180","181","182"],"import React from 'react';\r\nimport ReactCompareImage from 'react-compare-image';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProductDesktop = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [cartDisplay, setCartDisplay] = React.useState('none');\r\n    const [boxContent, setBoxContent] = React.useState([{\r\n        grainyBilly: 0,\r\n        creamyCarol: 0,\r\n        crispyCarrie: 0,\r\n        grainySue: 0,\r\n        fitFiona: 0,\r\n        richArnold: 0,\r\n        speedyTom: 0\r\n    }, 'unselected']);\r\n    const [hintDisplay, setHintDisplay] = React.useState(\"none\");\r\n\r\n    const toggleCartDisplay = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (cartDisplay == \"block\") {\r\n            setCartDisplay(\"none\");\r\n            setHintDisplay(\"none\");\r\n        }\r\n        else {\r\n            setCartDisplay(\"block\");\r\n            setHintDisplay(\"none\");\r\n        }\r\n    }\r\n\r\n    const productNameToObjectKey = (name) => {\r\n        let firstName = name.split(\" \")[0];\r\n        let secondName = name.split(\" \")[1];\r\n        let secondNameCapitalized = secondName.charAt(0).toUpperCase() + secondName.slice(1);\r\n        let objectKey = firstName + secondNameCapitalized;\r\n\r\n        return objectKey\r\n    }\r\n\r\n    const setNewBoxContent = (productsCount) => {\r\n        let newBoxContent = boxContent;\r\n        newBoxContent[0][productNameToObjectKey(props.name)] = productsCount;\r\n        newBoxContent[1] = productsCount;\r\n\r\n        return newBoxContent;\r\n    }\r\n\r\n    const setQuantity = (event) => {\r\n        let boxSizeSelected = event.target.children.item(0) ? event.target.children.item(0).textContent.trim() : event.target.textContent.trim();\r\n\r\n        switch (boxSizeSelected) {\r\n            case \"S\":\r\n                setBoxContent(setNewBoxContent(6));\r\n                break;\r\n            case \"M\":\r\n                setBoxContent(setNewBoxContent(12));\r\n                break;\r\n            case \"L\":\r\n                setBoxContent(setNewBoxContent(24));\r\n                break;\r\n            case \"XL\":\r\n                setBoxContent(setNewBoxContent(30));\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleThisFlavour = () => {\r\n        if (boxContent[1] === \"unselected\") {\r\n            setHintDisplay(\"inline\");\r\n        }\r\n        else {\r\n            history.push({\r\n                pathname: '/buyer-info',\r\n                boxContent: boxContent[0],\r\n                totalBoxQuantity: boxContent[1]\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleMixOwn = () => {\r\n        history.push({\r\n            pathname: '/mixed-box'\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ position: `relative` }}>\r\n            <button onClick={toggleCartDisplay} style={{ color: props.color }} className=\"desktop-open-cart\">\r\n                chcem túto tyčinku!\r\n            </button>\r\n            <ReactCompareImage\r\n                leftImage={`/img/desktop/${props.name.replace(/ /g, '')}.png`}\r\n                leftImageLabel={\r\n                    (\r\n                        <div onClick={toggleCartDisplay} className=\"desktop-product-shown-section\">\r\n                            <h1 className=\"desktop-product-shown-heading desktop-heading\">\r\n                                {props.name.split(\" \")[0]}<br />\r\n                                {props.name.split(\" \")[1]}<br />\r\n                            </h1>\r\n                            <strong className=\"desktop-price\">2,29 €</strong>\r\n                            <p className=\"desktop-product-shown-desc\">\r\n                                {props.textFirst}<br />\r\n                                {props.textSecond}<br />\r\n                                {props.textThird}\r\n                            </p>\r\n                            <img\r\n                                src={`/img/desktop/${props.icons}-icons.png`}\r\n                                className=\"desktop-product-icons\"\r\n                            >\r\n                            </img>\r\n                        </div>\r\n                    )\r\n                }\r\n                rightImage={`/img/desktop/${props.name.replace(/ /g, '')}-white.png`}\r\n                rightImageLabel={\r\n                    (\r\n                        <div className=\"desktop-product-hidden-section\">\r\n                            <h1\r\n                                style={{ color: props.color }}\r\n                                className=\"desktop-product-hidden-heading\"\r\n                            >\r\n                                {props.name.split(\" \")[0]}<br />\r\n                                {props.name.split(\" \")[1]}<br />\r\n                            </h1>\r\n                            <strong style={{ color: props.color }} className=\"desktop-price\">2,29 €</strong>\r\n                            <p className=\"desktop-product-hidden-desc\">\r\n                                {props.desc}\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                }\r\n                handle={<React.Fragment />}\r\n            />\r\n            <div style={{ display: cartDisplay }} className=\"desktop-cart\">\r\n                <i\r\n                    class=\"fas fa-times\"\r\n                    onClick={toggleCartDisplay}\r\n                >\r\n                </i>\r\n                <h2>\r\n                    máš chuť na čokolásku?\r\n                </h2>\r\n                <h3>\r\n                    objednaj si Simply Chocolate už dnes!\r\n                </h3>\r\n                <h2>\r\n                    veľkosť\r\n                </h2>\r\n                <ul className=\"desktop-box-sizes\">\r\n                    <li>\r\n                        <button style={{ cursor: 'pointer' }} onClick={setQuantity}><div><strong>S </strong></div>- 6ks</button>\r\n                    </li>\r\n                    <li>\r\n                        <button style={{ cursor: 'pointer' }} onClick={setQuantity}><div><strong>M </strong></div>- 12ks</button>\r\n                    </li>\r\n                    <li>\r\n                        <button style={{ cursor: 'pointer' }} onClick={setQuantity}><div><strong>L </strong></div>- 20ks</button>\r\n                    </li>\r\n                    <li>\r\n                        <button style={{ cursor: 'pointer' }} onClick={setQuantity}><div><strong>XL </strong></div>- 30ks</button>\r\n                    </li>\r\n                </ul>\r\n                <span\r\n                    style={{\r\n                        display: hintDisplay,\r\n                        color: `red`,\r\n                        fontFamily: `Social Gothic Demi-Bold`,\r\n                        textTransform: `uppercase`\r\n                    }}\r\n                >\r\n                    vyber si veľkosť.\r\n                </span>\r\n                <button style={{ color: `#fff` }} onClick={handleThisFlavour}>\r\n                    chcem túto príchuť\r\n                </button>\r\n                <br />\r\n                <button onClick={handleMixOwn}>namixujem si vlastný box</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductDesktop","/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/Product.js",["183","184","185","186"],"/Users/pro/Documents/www/simplychocolate.com/src/components/mobile/AboutPage.js",["187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":45,"column":9,"nodeType":"194","messageId":"195","endLine":58,"endColumn":10},{"ruleId":"196","severity":1,"message":"197","line":91,"column":30,"nodeType":"198","messageId":"199","endLine":91,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":103,"column":9,"nodeType":"194","messageId":"195","endLine":116,"endColumn":10},{"ruleId":"196","severity":1,"message":"200","line":143,"column":36,"nodeType":"198","messageId":"199","endLine":143,"endColumn":38},{"ruleId":"196","severity":1,"message":"200","line":150,"column":44,"nodeType":"198","messageId":"199","endLine":150,"endColumn":46},{"ruleId":"196","severity":1,"message":"200","line":167,"column":37,"nodeType":"198","messageId":"199","endLine":167,"endColumn":39},{"ruleId":"196","severity":1,"message":"200","line":174,"column":44,"nodeType":"198","messageId":"199","endLine":174,"endColumn":46},{"ruleId":"196","severity":1,"message":"200","line":191,"column":36,"nodeType":"198","messageId":"199","endLine":191,"endColumn":38},{"ruleId":"196","severity":1,"message":"200","line":198,"column":44,"nodeType":"198","messageId":"199","endLine":198,"endColumn":46},{"ruleId":"196","severity":1,"message":"200","line":215,"column":34,"nodeType":"198","messageId":"199","endLine":215,"endColumn":36},{"ruleId":"196","severity":1,"message":"200","line":222,"column":44,"nodeType":"198","messageId":"199","endLine":222,"endColumn":46},{"ruleId":"196","severity":1,"message":"200","line":239,"column":33,"nodeType":"198","messageId":"199","endLine":239,"endColumn":35},{"ruleId":"196","severity":1,"message":"200","line":246,"column":44,"nodeType":"198","messageId":"199","endLine":246,"endColumn":46},{"ruleId":"196","severity":1,"message":"200","line":263,"column":35,"nodeType":"198","messageId":"199","endLine":263,"endColumn":37},{"ruleId":"196","severity":1,"message":"200","line":270,"column":44,"nodeType":"198","messageId":"199","endLine":270,"endColumn":46},{"ruleId":"196","severity":1,"message":"200","line":287,"column":34,"nodeType":"198","messageId":"199","endLine":287,"endColumn":36},{"ruleId":"196","severity":1,"message":"200","line":294,"column":44,"nodeType":"198","messageId":"199","endLine":294,"endColumn":46},{"ruleId":"201","severity":1,"message":"202","line":315,"column":21,"nodeType":"203","endLine":315,"endColumn":64},{"ruleId":"201","severity":1,"message":"202","line":324,"column":21,"nodeType":"203","endLine":324,"endColumn":64},{"ruleId":"201","severity":1,"message":"202","line":333,"column":21,"nodeType":"203","endLine":333,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":342,"column":21,"nodeType":"203","endLine":342,"endColumn":62},{"ruleId":"201","severity":1,"message":"202","line":351,"column":21,"nodeType":"203","endLine":351,"endColumn":61},{"ruleId":"201","severity":1,"message":"202","line":360,"column":21,"nodeType":"203","endLine":360,"endColumn":63},{"ruleId":"201","severity":1,"message":"202","line":369,"column":21,"nodeType":"203","endLine":369,"endColumn":62},{"ruleId":"204","severity":1,"message":"205","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":17},{"ruleId":"204","severity":1,"message":"208","line":3,"column":20,"nodeType":"206","messageId":"207","endLine":3,"endColumn":30},{"ruleId":"209","severity":1,"message":"210","line":47,"column":8,"nodeType":"211","endLine":47,"endColumn":10,"suggestions":"212"},{"ruleId":"196","severity":1,"message":"197","line":70,"column":57,"nodeType":"198","messageId":"199","endLine":70,"endColumn":59},{"ruleId":"196","severity":1,"message":"197","line":71,"column":56,"nodeType":"198","messageId":"199","endLine":71,"endColumn":58},{"ruleId":"196","severity":1,"message":"197","line":72,"column":55,"nodeType":"198","messageId":"199","endLine":72,"endColumn":57},{"ruleId":"196","severity":1,"message":"197","line":73,"column":52,"nodeType":"198","messageId":"199","endLine":73,"endColumn":54},{"ruleId":"196","severity":1,"message":"197","line":74,"column":55,"nodeType":"198","messageId":"199","endLine":74,"endColumn":57},{"ruleId":"209","severity":1,"message":"213","line":35,"column":8,"nodeType":"211","endLine":35,"endColumn":10,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":241,"column":21,"nodeType":"203","endLine":246,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":27,"column":9,"nodeType":"194","messageId":"195","endLine":40,"endColumn":10},{"ruleId":"209","severity":1,"message":"217","line":41,"column":8,"nodeType":"211","endLine":41,"endColumn":10,"suggestions":"218"},{"ruleId":"201","severity":1,"message":"202","line":66,"column":21,"nodeType":"203","endLine":66,"endColumn":66},{"ruleId":"201","severity":1,"message":"202","line":67,"column":21,"nodeType":"203","endLine":67,"endColumn":66},{"ruleId":"201","severity":1,"message":"202","line":68,"column":21,"nodeType":"203","endLine":68,"endColumn":67},{"ruleId":"201","severity":1,"message":"202","line":69,"column":21,"nodeType":"203","endLine":69,"endColumn":64},{"ruleId":"201","severity":1,"message":"202","line":70,"column":21,"nodeType":"203","endLine":70,"endColumn":63},{"ruleId":"201","severity":1,"message":"202","line":71,"column":21,"nodeType":"203","endLine":71,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":72,"column":21,"nodeType":"203","endLine":72,"endColumn":64},{"ruleId":"219","severity":1,"message":"220","line":80,"column":13,"nodeType":"203","endLine":88,"endColumn":16},{"ruleId":"209","severity":1,"message":"221","line":19,"column":8,"nodeType":"211","endLine":19,"endColumn":10,"suggestions":"222"},{"ruleId":"201","severity":1,"message":"202","line":33,"column":13,"nodeType":"203","endLine":33,"endColumn":78},{"ruleId":"201","severity":1,"message":"202","line":68,"column":37,"nodeType":"203","endLine":68,"endColumn":109},{"ruleId":"201","severity":1,"message":"202","line":80,"column":41,"nodeType":"203","endLine":80,"endColumn":105},{"ruleId":"201","severity":1,"message":"202","line":109,"column":37,"nodeType":"203","endLine":109,"endColumn":108},{"ruleId":"201","severity":1,"message":"202","line":43,"column":17,"nodeType":"203","endLine":52,"endColumn":18},{"ruleId":"204","severity":1,"message":"223","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"224","line":75,"column":12,"nodeType":"206","messageId":"207","endLine":75,"endColumn":20},{"ruleId":"204","severity":1,"message":"223","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":35,"column":17,"nodeType":"203","endLine":35,"endColumn":75},{"ruleId":"201","severity":1,"message":"202","line":65,"column":21,"nodeType":"203","endLine":65,"endColumn":93},{"ruleId":"201","severity":1,"message":"202","line":99,"column":21,"nodeType":"203","endLine":99,"endColumn":60},{"ruleId":"201","severity":1,"message":"202","line":112,"column":21,"nodeType":"203","endLine":112,"endColumn":87},{"ruleId":"225","severity":1,"message":"226","line":93,"column":25,"nodeType":"227","endLine":93,"endColumn":44},{"ruleId":"201","severity":1,"message":"202","line":28,"column":17,"nodeType":"203","endLine":28,"endColumn":50},{"ruleId":"219","severity":1,"message":"220","line":36,"column":17,"nodeType":"203","endLine":38,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":41,"column":17,"nodeType":"203","endLine":43,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":9,"column":17,"nodeType":"203","endLine":9,"endColumn":93},{"ruleId":"196","severity":1,"message":"197","line":24,"column":25,"nodeType":"198","messageId":"199","endLine":24,"endColumn":27},{"ruleId":"192","severity":1,"message":"193","line":54,"column":9,"nodeType":"194","messageId":"195","endLine":67,"endColumn":10},{"ruleId":"201","severity":1,"message":"202","line":110,"column":29,"nodeType":"203","endLine":113,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":49,"column":9,"nodeType":"194","messageId":"195","endLine":62,"endColumn":10},{"ruleId":"201","severity":1,"message":"202","line":101,"column":13,"nodeType":"203","endLine":101,"endColumn":97},{"ruleId":"196","severity":1,"message":"197","line":109,"column":42,"nodeType":"198","messageId":"199","endLine":109,"endColumn":44},{"ruleId":"201","severity":1,"message":"202","line":147,"column":13,"nodeType":"203","endLine":147,"endColumn":98},{"ruleId":"201","severity":1,"message":"202","line":13,"column":13,"nodeType":"203","endLine":13,"endColumn":85},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useForm' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'billingInformation.address', 'billingInformation.city', 'billingInformation.email', 'billingInformation.firstName', 'billingInformation.lastName', 'billingInformation.phone', 'billingInformation.zipCode', and 'location'. Either include them or remove the dependency array.","ArrayExpression",["230"],"React Hook React.useEffect has missing dependencies: 'location.boxContent', 'location.buyerInformation', 'location.price', and 'location.totalBoxQuantity'. Either include them or remove the dependency array.",["231"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook React.useEffect has missing dependencies: 'location.boxContent', 'location.buyerInformation', and 'location.totalBoxQuantity'. Either include them or remove the dependency array.",["232"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook React.useEffect has missing dependencies: 'location.boxContent' and 'location.totalBoxQuantity'. Either include them or remove the dependency array.",["233"],"'useState' is defined but never used.","'autoPlay' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [billingInformation.address, billingInformation.city, billingInformation.email, billingInformation.firstName, billingInformation.lastName, billingInformation.phone, billingInformation.zipCode, location]",{"range":"242","text":"243"},"Update the dependencies array to be: [location.boxContent, location.buyerInformation, location.price, location.totalBoxQuantity]",{"range":"244","text":"245"},"Update the dependencies array to be: [location.boxContent, location.buyerInformation, location.totalBoxQuantity]",{"range":"246","text":"247"},"Update the dependencies array to be: [location.boxContent, location.totalBoxQuantity]",{"range":"248","text":"249"},[1880,1882],"[billingInformation.address, billingInformation.city, billingInformation.email, billingInformation.firstName, billingInformation.lastName, billingInformation.phone, billingInformation.zipCode, location]",[1553,1555],"[location.boxContent, location.buyerInformation, location.price, location.totalBoxQuantity]",[1212,1214],"[location.boxContent, location.buyerInformation, location.totalBoxQuantity]",[576,578],"[location.boxContent, location.totalBoxQuantity]"]